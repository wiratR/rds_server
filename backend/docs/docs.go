// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Txnhistories/{accountId}": {
            "get": {
                "description": "retrieves a transaction history by account ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Txnhistories"
                ],
                "summary": "retrieves a transaction history by account ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TxnHistoryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/create": {
            "post": {
                "description": "create new account with user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "create new account with user id",
                "parameters": [
                    {
                        "description": "Account Data",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccoutCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseSuccessAccount"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/accounts/{userId}": {
            "get": {
                "description": "get account by user id func get account infomation by userid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "get account by user id func get account infomation by userid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseSuccessAccount"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "Login Data",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccessToken"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/auth/loginbyphone": {
            "post": {
                "description": "Login by phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login by phone number",
                "parameters": [
                    {
                        "description": "Login Data",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignInByPhone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/models.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "description": "logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "logout",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "register new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "register new account",
                "parameters": [
                    {
                        "description": "Register Data",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUpInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseSuccessUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/payment/nativepay": {
            "post": {
                "description": "payment connect to Ksher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "payment connect to Ksher",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseBody"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/txnhistories/create": {
            "post": {
                "description": "create transaction history with account id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Txnhistories"
                ],
                "summary": "create transaction history with account id",
                "parameters": [
                    {
                        "description": "Txn Create Input Data",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TxnCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TxnHistoryResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/users/delete/{id}": {
            "delete": {
                "description": "delete user by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user by user id",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseError"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Get current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseSuccessUser"
                            }
                        }
                    }
                }
            }
        },
        "/users/update": {
            "patch": {
                "description": "update user detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "update user detail",
                "parameters": [
                    {
                        "description": "User Update Data",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseSuccessUser"
                            }
                        }
                    }
                }
            }
        },
        "/users/update/{id}": {
            "patch": {
                "description": "update user detail by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "update user detail by user id",
                "parameters": [
                    {
                        "description": "User Update Data",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseSuccessUser"
                            }
                        }
                    }
                }
            }
        },
        "/users/updatepassword/{id}": {
            "patch": {
                "description": "update user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "update user password",
                "parameters": [
                    {
                        "description": "Update user password",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserPasswordUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseSuccessUser"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get user infomation by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get user infomation by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseSuccessUser"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Account": {
            "type": "object",
            "properties": {
                "accountToken": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "balance": {
                    "type": "integer"
                },
                "blockFlag": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastEntryLocId": {
                    "type": "integer"
                },
                "lastEntrySpId": {
                    "type": "integer"
                },
                "lastEntryTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "txnHistories": {
                    "description": "One-to-many relationship with TxnHistory",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TxnHistory"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "description": "Association",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "userID": {
                    "description": "Foreign key, unique constraint for one-to-one relationship",
                    "type": "string"
                }
            }
        },
        "models.AccountResponse": {
            "type": "object",
            "properties": {
                "account_token": {
                    "type": "string"
                },
                "account_type": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "balance": {
                    "type": "integer"
                },
                "block_flag": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_entry_loc_id": {
                    "type": "integer"
                },
                "last_entry_sp_id": {
                    "type": "integer"
                },
                "last_entry_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "txn_histories_detail": {
                    "description": "UserID         uuid.UUID    ` + "`" + `json:\"user_id\"` + "`" + `\nUser               UserResponse         ` + "`" + `json:\"user\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TxnHistoryResponse"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.AccoutCreateInput": {
            "type": "object",
            "required": [
                "account_type",
                "user_id"
            ],
            "properties": {
                "account_type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.LineDetail": {
            "type": "object",
            "properties": {
                "line_id": {
                    "type": "integer"
                },
                "line_name": {
                    "type": "string"
                }
            }
        },
        "models.LocDetail": {
            "type": "object",
            "properties": {
                "line_detail": {
                    "$ref": "#/definitions/models.LineDetail"
                },
                "loc_id": {
                    "type": "integer"
                },
                "loc_name": {
                    "type": "string"
                }
            }
        },
        "models.ResponseBody": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ResponseError": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ResponseSuccessAccount": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/models.AccountResponse"
                        },
                        "txn_histories": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TxnHistory"
                            }
                        },
                        "user": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ResponseSuccessToken": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "token": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ResponseSuccessUser": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.SignInByPhone": {
            "type": "object",
            "required": [
                "password",
                "phone"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.SignInInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.SignInResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.UserResponse"
                }
            }
        },
        "models.SignUpInput": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "password_confirm",
                "phone",
                "user_name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "password_confirm": {
                    "type": "string",
                    "minLength": 8
                },
                "phone": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "models.SpDetail": {
            "type": "object",
            "properties": {
                "sp_id": {
                    "type": "integer"
                },
                "sp_name": {
                    "type": "string"
                }
            }
        },
        "models.TxnCreateInput": {
            "type": "object",
            "properties": {
                "equipment_number": {
                    "type": "string"
                },
                "loc_entry_id": {
                    "type": "integer"
                },
                "loc_exit_id": {
                    "type": "integer"
                },
                "sp_id": {
                    "type": "integer"
                },
                "txn_amount": {
                    "type": "integer"
                },
                "txn_ref_id": {
                    "type": "string"
                },
                "txn_type_id": {
                    "type": "integer"
                }
            }
        },
        "models.TxnDetail": {
            "type": "object",
            "properties": {
                "txn_type_id": {
                    "type": "integer"
                },
                "txn_type_name": {
                    "type": "string"
                }
            }
        },
        "models.TxnHistory": {
            "type": "object",
            "required": [
                "equipmentNumber",
                "locEntryId",
                "locExitId",
                "spId",
                "txnAmount",
                "txnRefId",
                "txnTypeId"
            ],
            "properties": {
                "account": {
                    "description": "Association",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Account"
                        }
                    ]
                },
                "accountID": {
                    "description": "Foreign key to Account",
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "equipmentNumber": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "locEntryId": {
                    "type": "integer"
                },
                "locExitId": {
                    "type": "integer"
                },
                "spId": {
                    "type": "integer"
                },
                "txnAmount": {
                    "type": "integer"
                },
                "txnRefId": {
                    "type": "string"
                },
                "txnTypeId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.TxnHistoryResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "equipment_number": {
                    "type": "string"
                },
                "loc_entry_detail": {
                    "$ref": "#/definitions/models.LocDetail"
                },
                "loc_exit_detail": {
                    "$ref": "#/definitions/models.LocDetail"
                },
                "sp_detail": {
                    "$ref": "#/definitions/models.SpDetail"
                },
                "txn_amount": {
                    "type": "integer"
                },
                "txn_detail": {
                    "$ref": "#/definitions/models.TxnDetail"
                },
                "txn_ref_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "One-to-one relationship with Account",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Account"
                        }
                    ]
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "models.UserPasswordUpdate": {
            "type": "object",
            "properties": {
                "confirm_new_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "models.UserUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8000",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "Swagger Example API",
	Description:      "This is a sample api server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
